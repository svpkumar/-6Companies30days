///**** Leetcode-2099 Find Subsequence of Length K With the Largest Sum *****///

class Solution {
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> temp(n);
        vector<int> ans;
        unordered_map<int,int> mp;

        for(int i=0;i<n;i++){
            temp[i]=nums[i];
        }

        sort(temp.begin(),temp.end(),greater<>());

        for(int i=0;i<k;i++){
            mp[temp[i]]++;
        }

        int j=0;
        int t=0;

        while(t!=k){
            if(mp.find(nums[j]) != mp.end()){
                if(mp[nums[j]]>0){
                    ans.push_back(nums[j]);
                    mp[nums[j]]--;
                    t++;
                }
            }
            j++;
        }
        return ans;
    }
};
